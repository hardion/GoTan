// Note: "common.gradle" in the root project contains additional initialization
//   for this project. This initialization is applied in the "build.gradle"
//   of the root project.

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
apply plugin: 'rpm'
//apply plugin: 'ubuntu'
apply plugin: 'fpm-packaging'


if (!hasProperty('mainClass')) {
    ext.mainClass = 'org.gotan.tango.TangoGotanBootStrap'
}
mainClassName = ext.mainClass

repositories {
    maven { url "http://jcenter.bintray.com" } 
    maven { url "http://dl.bintray.com/content/vhardion/gotan-mvn" } 
}

dependencies {
    compile project(':gotan-sdk')
    compile "org.tango:JTangoClientLang:1.0.1-WSP"
    
    compile 'org.slf4j:slf4j-api:1.6.1'
    compile 'ch.qos.logback:logback-classic:0.9.28'
    
    compile "commons-cli:commons-cli:1.2"
    
    testCompile "org.tango:JTangoServer:1.0.1-alpha-WSP" 

}

def marker = """##
##############################################################################"""

def unixTangoHost = '''

# Add the default TANGO_HOST of the system
if [ ! $TANGO_HOST ] && [ -f /etc/tangorc ]; then
    . /etc/tangorc
fi
'''

startScripts {
    
    //http://issues.gradle.org/browse/GRADLE-2207
    doLast {
        unixScript.text = unixScript.text.replace(marker, marker+unixTangoHost)
    }
}


// Allow to define argument for the gotan server with tango capability
run{
    if(project.hasProperty("gotan")){
        args gotan.split(" ")
    }
}

// Allow to run in debug mode
task(runDebug, dependsOn: 'classes', type: JavaExec) {
    main = mainClassName
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs = ["-Xdebug", "-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"]
}

// R P M  section

// call by the plugins
buildscript {
    // Used by the RPM plugin
    repositories {
        mavenCentral()
        mavenLocal()
    }
    // The RPM plugin itself
    dependencies {
        classpath 'com.trigonic:gradle-rpm-plugin:1.3'
                // For the ubuntu packager plugin
        classpath 'be.thinkerit.gradle:ubuntu-packager-plugin:dev-SNAPSHOT'
        classpath 'com.kenshoo:gradle-fpm:0.3'

    }
}

// Generate a RPM
task RPM(type: Rpm) {
    packageName = rootProject.name
    version = project.version
    release = 1
    arch = NOARCH
    os = LINUX

    //installUtils = file('scripts/rpm/utils.sh')
    //preInstall = file('scripts/rpm/preInstall.sh')
    //postInstall = file('scripts/rpm/postInstall.sh')
    //preUninstall = file('scripts/rpm/preUninstall.sh')
    //postUninstall = file('scripts/rpm/postUninstall.sh')

    requires('java', '1.7', GREATER | EQUAL)
    requires('tango-common', '8.0.5', GREATER | EQUAL)

    into '/opt/gotan'

    from(jar.outputs.files) {
        into 'lib'
    }
    
    from(configurations.runtime) {
        into 'lib'
    }
        
    from('src/main/scripts') {
        into 'bin'
        fileMode = 0550
    }
    
    from('src/main/resources') {
        fileType = CONFIG // | NOREPLACE
        into 'conf'
    }
    
    link ('/etc/init.d/gotan','/opt/gotan/bin/init.d')
}

def stagingDir = new File(project.buildDir, "staging")

task preparePackaging(type: Copy) {
   into(stagingDir)

    from(jar.outputs.files) {
        into 'lib'
    }
    
    from(configurations.runtime) {
        into 'lib'
    }
        
    from('src/main/scripts') {
      exclude '**/init.d'
      rename 'init.d.debian', 'init.d'
      into 'bin'
        fileMode = 0550
    }
    
    from('src/main/resources') {
        fileMode = 0550
        into 'conf'
    }
    
//    link ('/etc/init.d/gotan','/opt/gotan/bin/init.d')  
}

packaging{
    dependencies = ['openjdk-6-jre', 'tango-common'] //Optional, an array of package dependencies
    baseDir = stagingDir// Optional, base directory to package, default: project.buildDir
    prefix = "/opt/gotan" // Optional, a path to prefix files when building package, default: root (/)
    extraOptions = ['--vendor': 'me', '--maintainer': 'me', '-a':'all'] // Optional, a map containing extra options
//    filesArgs = ['dir1', 'file1']//Optional, array of files/dirs to package, relative to baseDir, default: .
}

debian.dependsOn preparePackaging

// To create a debian package
//ubuntu {
//    archive = new File("${project.buildDir}/distributions/gotan-tango-1.0.tar").toURI()
//    releaseNotes = "Example for the ubuntu packager plugin"
//    author = 'me'
//    email = 'me@example.org'
//    homepage = 'http://example.org'
//    depends {
//        // uncomment to add dependencies to be installed
//        // on 'mysql-server'
//        // on 'jetty'
//    }
//    dirs {
//        // you can add as many dir statements as you need
//        dir '/usr/share/helloworld/bin'
//    }
//
//}
