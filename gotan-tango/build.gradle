// Note: "common.gradle" in the root project contains additional initialization
//   for this project. This initialization is applied in the "build.gradle"
//   of the root project.

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
buildscript {
   repositories {
      jcenter()
   }
   dependencies {
      // The RPM plugin itself
      classpath 'com.netflix.nebula:gradle-ospackage-plugin:1.10.0'
   }
}

apply plugin: 'os-package'


if (!hasProperty('mainClass')) {
   ext.mainClass = 'org.gotan.tango.TangoGotanBootStrap'
}
mainClassName = ext.mainClass

repositories {
   //mavenLocal()
   maven { url "http://jcenter.bintray.com" } 
   maven { url "http://dl.bintray.com/content/vhardion/gotan-mvn" } 
}

dependencies {
   compile project(':gotan-sdk')
   compile "org.tango:JTangoClientLang:1.0.9"
    
   compile 'org.slf4j:slf4j-api:1.6.1'
   //compile 'ch.qos.logback:logback-classic:0.9.28'
    
   compile "commons-cli:commons-cli:1.2"
    
   testCompile "org.tango:JTangoServer:1.1.1" 

}

def marker = """##
##############################################################################"""

def unixTangoHost = '''

# Add the default TANGO_HOST of the system
if [ ! $TANGO_HOST ] && [ -f /etc/tangorc ]; then
    . /etc/tangorc
fi
'''

startScripts {
    
   //http://issues.gradle.org/browse/GRADLE-2207
   doLast {
      unixScript.text = unixScript.text.replace(marker, marker+unixTangoHost)
   }
}


// Allow to define argument for the gotan server with tango capability
run{
   if(project.hasProperty("gotan")){
      args gotan.split(" ")
   }
}

// Allow to run in debug mode
task(runDebug, dependsOn: 'classes', type: JavaExec) {
   main = mainClassName
   classpath = sourceSets.main.runtimeClasspath
   jvmArgs = ["-Xdebug", "-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"]
}

// Packaging Section
ospackage {
   packageName = rootProject.name
   version = project.version
   release = 1
   arch = NOARCH
   os = LINUX

   requires('java', '1.7', GREATER | EQUAL)
   requires('tango-common', '8.0.5', GREATER | EQUAL)

   into '/opt/gotan'

   from(jar.outputs.files) {
      user 'root'
      into 'lib'
   }
    
   from(configurations.runtime) {
      user 'root'
      into 'lib'
   }
        
   from('src/main/scripts') {
      user 'root'
      into 'bin'
      fileMode = 0550
   }
    
   from('src/main/resources') {
      user 'root'
      fileType = CONFIG // | NOREPLACE
      into 'conf'
   }
    


}

buildRpm {
   link ('/opt/gotan/bin/init.d', '/etc/init.d/gotan')
}

buildDeb {
//   requires('bat', '1.0.1')
   link('/opt/gotan/bin/init.upstart', '/etc/init.d/gotan')
}
