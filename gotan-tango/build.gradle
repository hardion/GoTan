// Note: "common.gradle" in the root project contains additional initialization
//   for this project. This initialization is applied in the "build.gradle"
//   of the root project.

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = 'org.gotan.tango.TangoGotanBootStrap'
}
mainClassName = ext.mainClass

def localMavenRepo = "file://${project.projectDir}/lib"

repositories {
    // Use local Maven repo location. We don't need this if we only want to install
    // an artifact, but we do need it if we want to use dependencies from the local
    // repository.
    mavenRepo urls: localMavenRepo
    
    mavenCentral();
    mavenRepo urls: ['http://repository.jboss.org/']
//    mavenRepo urls: ['http://www2.synchrotron-soleil.fr/controle/maven2/soleil/']
}

dependencies {
    compile project(':gotan-sdk')
    compile "org.tango:JTangoClientLang:1.0.1-SA-SNAPSHOT"
    
    compile 'org.slf4j:slf4j-api:1.6.1'
    compile 'ch.qos.logback:logback-classic:0.9.28'
    
    compile "commons-cli:commons-cli:1.2"
    
    testCompile "org.tango:JTangoServer:1.0.1-SA-SNAPSHOT" 

}

def marker = """##
##############################################################################"""

def unixTangoHost = '''

# Add the default TANGO_HOST of the system
if [ ! $TANGO_HOST ] && [ -f /etc/tangorc ]; then
    . /etc/tangorc
fi
'''

startScripts {
    
    //http://issues.gradle.org/browse/GRADLE-2207
    doLast {
        unixScript.text = unixScript.text.replace(marker, marker+unixTangoHost)
    }
}


// Allow to define argument for the gotan server with tango capability
run{
    if(project.hasProperty("gotan")){
        args gotan.split(" ")
    }
}

// Allow to run in debug mode
task(runDebug, dependsOn: 'classes', type: JavaExec) {
    main = mainClassName
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs = ["-Xdebug", "-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"]
}
